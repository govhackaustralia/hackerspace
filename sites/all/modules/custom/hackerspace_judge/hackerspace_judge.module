<?php
define('PRIZES_TAXONOMY_VOCABULARY_ID', 11);
/**
* Implements hook_perm.
*/
function hackerspace_judge_permission() {
  return array(
    'judge_voting' => array(
      'title' => t('Judge additional permissions'),
      'description' => t('Judge project voting and commenting'),
    ),
  );
}


/**
 * Implements hook_theme.
 */
function hackerspace_judge_theme($existing, $type, $theme, $path) {
    return array(
      'hackerspace_judge_prizes_projects_list' => array(
        'variables' => array('data' => array()),
        'path' => drupal_get_path('module', 'hackerspace_judge') . '/theme',
        'template' => 'hackerspace-judge-prizes-projects-list',
      ),
    );
}
/**
 * Implements hook_menu.
 */
function hackerspace_judge_menu() {
  $items = array();

  $items['ajax/judge/comment'] = array(
    'title' => 'judge comment',
    'page callback' => 'hackerspace_judge_ajax_comment',
    'page arguments' => array(),
    'access callback' => user_access('judge_voting'),
    'access arguments' => array(),
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/prizes/projects'] = array(
    'title' => 'Prizes projects',
    'page callback' => 'prizes_projects_list',
    'page arguments' => array(),
    'access callback' => user_access('administer site configuration'),
    'access arguments' => array(),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function prizes_projects_list(){

  $projects = views_get_view_result('prizes_projects', 'block_1');
  $prizes_tids = taxonomy_get_tree(PRIZES_TAXONOMY_VOCABULARY_ID);
  $prizes_ordered_by_tid = array();

  foreach ($prizes_tids as $prize_obj) {
    $prizes_ordered_by_tid[$prize_obj->tid]['name'] = $prize_obj->name;
  }

  foreach ($projects as $project) {
    $node = $project->_field_data['nid']['entity'];

    if ($node->field_prizes) {
      //Count sum rating
      $rating = 0;
      if ($node->field_quality) {
        $rating += (int)$node->field_quality[LANGUAGE_NONE][0]['rating'];
      }
      if ($node->field_originality) {
        $rating += (int)$node->field_originality[LANGUAGE_NONE][0]['rating'];
      }
      if ($node->field_relevance) {
        $rating += (int)$node->field_relevance[LANGUAGE_NONE][0]['rating'];
      }
      if ($node->field_consistency) {
        $rating += (int)$node->field_consistency[LANGUAGE_NONE][0]['rating'];
      }
      if ($node->field_usability) {
        $rating += (int)$node->field_usability[LANGUAGE_NONE][0]['rating'];
      }

      //Prizes project list
      foreach ($node->field_prizes[LANGUAGE_NONE] as $prize_array_tid) {
        $prizes_ordered_by_tid[$prize_array_tid['target_id']]['nodes'][$rating][] = '<p>' . l($node->title, 'node/'.$node->nid) . '</p>';
      }
    }

  }
  //Sort nodes by rating
  foreach ($prizes_ordered_by_tid as $tid => $nodes_not_ordered) {
    if(isset($prizes_ordered_by_tid[$tid]['nodes'])){
      krsort($prizes_ordered_by_tid[$tid]['nodes']);
    }
  }
//  echo "<pre>";
//  var_dump($prizes_ordered_by_tid);
//  echo "</pre>";
//  die();

  return theme('hackerspace_judge_prizes_projects_list', array('data' => $prizes_ordered_by_tid));

}

function hackerspace_judge_ajax_comment(){
  global $user;
  if((int)$_POST['nid'] && $_POST['comment']){
    $node = node_load($_POST['nid']);
    $field_collection_item = entity_create('field_collection_item', array('field_name' => 'field_judge_comment'));
    $field_collection_item->setHostEntity('node', $node);
    $field_collection_item->field_judge_id[LANGUAGE_NONE][]['uid'] = $user->uid;
    $field_collection_item->field_comment[LANGUAGE_NONE][]['value'] = $_POST['comment'];
    $field_collection_item->field_comment[LANGUAGE_NONE][]['safe_value'] = $_POST['comment'];
    $field_collection_item->save();
    print json_encode(array('result' => 1));
  }
  else{
    print json_encode(array('result' => 0));
  }
  die();
}

/**
 * Implements hook_init.
 */
function hackerspace_judge_init() {
  drupal_add_js(drupal_get_path('module', 'hackerspace_judge') . '/js/hackerspace_judge.js');
  drupal_add_css(drupal_get_path('module', 'hackerspace_judge') . '/css/hackerspace_judge.css');
}

/**
 * Implements hook_form_alter.
 */
function hackerspace_judge_form_alter(&$form, &$form_state, $form_id) {
  if($form_id == 'user_profile_form'){
    if((!user_access("judge_voting", $form['#user']) && user_access('administer site configuration')) || !user_access('administer site configuration')){
      unset($form['field_user_prizes']);
    }
  }
}

