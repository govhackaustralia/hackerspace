<?php
function _update_prizes_callback($form, $form_state)
{
    return $form['field_prizes'];
}

function _update_event_location_callback($form, $form_state)
{
    return $form['field_event_location'];
}

function govhack_project_node_preview($form, &$form_state)
{
    // calculate not yet saved changes for preview
    $node = node_form_submit_build_node($form, $form_state);
// Prepend preview to node edit form
    $form_state['node_preview'] = '<div class="preview" style="border: solid 3px black;"></div>';
    $form_state['rebuild'] = TRUE;
    drupal_set_message("All competition elements have not be submitted, project can not be submitted.");
    drupal_set_message("Project has been submitted -select re-Open Project");
}

function govhack_project_form_alter(&$form, &$form_state, $form_id)
{
    if ($form_id == 'project_node_form') {
        // Add a 'View changes' button on the node edit form.
        $form['actions']['submit_project'] = array(
            '#type' => 'submit',
            '#value' => t('Submit your entry'),
            '#weight' => 12,
            '#submit' => array('govhack_project_node_preview'),
        );
        $form['field_event_location']['und']['#ajax'] = array(
            'callback' => '_update_prizes_callback',
            'wrapper' => 'prizes_wrapper',
        );
        $form['field_prizes']['und']['#prefix'] = '<div id="prizes_wrapper">';
        $form['field_prizes']['und']['#suffix'] = '</div>';

        $form['field_region']['und']['#ajax'] = array(
            'callback' => '_update_event_location_callback',
            'wrapper' => 'event_location_wrapper',
        );
        $form['field_event_location']['und']['#prefix'] = '<div id="event_location_wrapper">';
        $form['field_event_location']['und']['#suffix'] = '</div>';

        $form['field_ready']['und']['#prefix'] = '<div id="ready_wrapper" style="display:none;">';
        $form['field_ready']['und']['#suffix'] = '</div>';

        $form['field_official_datasets_values']['und']['#suffix'] = '
        <script>
        var thisField;
        if (!String.prototype.includes) {
  String.prototype.includes = function(search, start) {
    \'use strict\';
    if (typeof start !== \'number\') {
      start = 0;
    }
    
    if (start + search.length > this.length) {
      return false;
    } else {
      return this.indexOf(search, start) !== -1;
    }
  };
}
function attachCKANAutocomplete() {
  jQuery("#edit-field-official-datasets .link-field-url input").each(function() {
        jQuery(this).change(function() {
            if (jQuery(this).val().includes("/dataset/")) {
                thisField = jQuery(this);
                jQuery.getJSON(jQuery(this).val().replace("/dataset/", "/api/3/action/package_show?id="), function(data) {
                    thisField.closest("tr").find(".field-name-field-dataset-name input").val(data.result.title);
                    thisField.closest("tr").find(".field-name-field-publishing-organisation input").val(data.result.organization.title);
                    if (data.result.jurisdiction === "Commonwealth of Australia") {
                        thisField.closest("tr").find(".field-name-field-jurisdiction-of-data select").val("Australian Government");
                    } else {
                      thisField.closest("tr").find(".field-name-field-jurisdiction-of-data select").val(data.result.jurisdiction);
                    }
                });
            };
        });
    });
}
        jQuery(function() {
    attachCKANAutocomplete() ;
});

Drupal.behaviors.MyModule = {
    attach: function (context, settings) { 
          //Called after ajax event returns data
              Drupal.ajax["edit-field-official-datasets-und-add-more"].success = function(response, status) {
                console.log(response);
                setTimeout(function() {
      attachCKANAutocomplete();
    }, 100)
                 //Pass back to original method
                 Drupal.ajax.prototype.success.call(this, response, status);
             }
            
            }
            }
        </script>';


    }
}

/**
 * Implements hook_block_info().
 * http://kahthong.com/2013/06/create-your-own-custom-drupal-block-programmatically
 */
function govhack_project_block_info()
{
    $blocks = array();
    $blocks['scorecard'] = array(
        'info' => t('GovHack Score card'),
    );
    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function govhack_project_block_view($delta = '')
{
    $block = array();
    switch ($delta) {
        case 'scorecard':
            $block['subject'] = '';
            $block['content'] = _govhack_project_scorecard_content();
            break;
    }
    return $block;
}

function _govhack_project_scorecard_content()
{
    $output = t('Hello world');
    return $output;
}